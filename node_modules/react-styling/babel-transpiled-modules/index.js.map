{"version":3,"sources":["../source/index.js"],"names":[],"mappings":"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","file":"index.js","sourcesContent":["import { exists, starts_with, ends_with, is_blank, zip, extend, not_empty } from './helpers'\nimport Tabulator from './tabulator'\n\n// using ES6 template strings\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/template_strings\nexport default function(strings, ...values)\n{\n\tlet style = ''\n\n\t// restore the whole string from \"strings\" and \"values\" parts\n\tlet i = 0\n\twhile (i < strings.length)\n\t{\n\t\tstyle += strings[i]\n\t\tif (exists(values[i]))\n\t\t{\n\t\t\tstyle += values[i]\n\t\t}\n\t\ti++\n\t}\n\n\treturn parse_style_json_object(style)\n}\n\n// converts text to JSON object\nfunction parse_style_json_object(text)\n{\n\t// remove multiline comments\n\ttext = text.replace(/\\/\\*([\\s\\S]*?)\\*\\//g, '')\n\n\t// ignore curly braces for now.\n\t// maybe support curly braces along with tabulation in future\n\ttext = text.replace(/[\\{\\}]/g, '')\n\n\tconst lines = text.split('\\n')\n\n\t// helper class for dealing with tabulation\n\tconst tabulator = new Tabulator(Tabulator.determine_tabulation(lines))\n\n\t// parse text into JSON object\n\tconst style_json = parse_style_class(tabulator.extract_tabulation(lines), [])\n\n\t// expand \"modifier\" style classes\n\treturn expand_modifier_style_classes(style_json)\n}\n\n// parse child nodes' lines (and this node's styles) into this node's style JSON object\nfunction parse_node_json(styles, children_lines, node_names)\n{\n\t// transform this node's style lines from text to JSON properties and their values\n\tconst style_object = styles.map(function(style)\n\t{\n\t\tlet key   = style.substring(0, style.indexOf(':')).trim()\n\t\tlet value = style.substring(style.indexOf(':') + ':'.length).trim()\n\n\t\t// transform dashed key to camelCase key (it's required by React)\n\t\tkey = key.replace(/([-]{1}[a-z]{1})/g, character => character.substring(1).toUpperCase())\n\n\t\t// support old CSS syntax\n\t\tvalue = value.replace(/;$/, '').trim()\n\n\t\t// check if the value can be parsed into an integer\n\t\tif (String(parseInt(value)) === value)\n\t\t{\n\t\t\tvalue = parseInt(value)\n\t\t}\n\n\t\t// check if the value can be parsed into a float\n\t\tif (String(parseFloat(value)) === value)\n\t\t{\n\t\t\tvalue = parseFloat(value)\n\t\t}\n\n\t\treturn { key, value }\n\t})\n\t// combine the styles into a JSON object\n\t.reduce(function(styles, style)\n\t{\n\t\tstyles[style.key] = style.value\n\t\treturn styles\n\t}, \n\t{})\n\n\t// parse child nodes and add them to this node's JSON object\n\treturn extend(style_object, parse_children(children_lines, node_names))\n}\n\n// separates style lines from children lines\nfunction split_into_style_lines_and_children_lines(lines)\n{\n\t// get this node style lines\n\tconst style_lines = lines.filter(function(line)\n\t{\n\t\t// styles always have indentation of 1\n\t\tif (line.tabs !== 1)\n\t\t{\n\t\t\treturn false\n\t\t}\n\n\t\t// detect generic css style line (skip modifier classes and media queries)\n\t\tconst colon_index = line.line.indexOf(':')\n\n\t\t// is not a modifier class\n\t\treturn !starts_with(line.line, '&') \n\t\t\t// is not a media query style class name declaration\n\t\t\t&& !starts_with(line.line, '@media') \n\t\t\t// is not a keyframes style class name declaration\n\t\t\t&& !starts_with(line.line, '@keyframes') \n\t\t\t// has a colon\n\t\t\t&& colon_index >= 0 \n\t\t\t// is not a state class (e.g. :hover) name declaration\n\t\t\t&& colon_index !== 0\n\t\t\t// is not a yaml-style class name declaration\n\t\t\t&& colon_index < line.line.length - 1\n\t})\n\n\t// get children nodes' lines\n\tconst children_lines = lines.filter(line => style_lines.indexOf(line) < 0)\n\n\t// reduce tabulation for this child node's (or these child nodes') child nodes' lines\n\tchildren_lines.forEach(line => line.tabs--)\n\n\treturn { style_lines, children_lines}\n}\n\n// parses a style class node name\nfunction parse_node_name(name)\n{\n\t// is it a \"modifier\" style class\n\tlet is_a_modifier = false\n\n\t// detect modifier style classes\n\tif (starts_with(name, '&'))\n\t{\n\t\tname = name.substring('&'.length)\n\t\tis_a_modifier = true\n\t}\n\n\t// support old-school CSS syntax\n\tif (starts_with(name, '.'))\n\t{\n\t\tname = name.substring('.'.length)\n\t}\n\n\t// if there is a trailing colon in the style class name - trim it\n\t// (Python people with yaml-alike syntax)\n\tif (ends_with(name, ':'))\n\t{\n\t\tname = name.substring(0, name.length - ':'.length)\n\t\t// throw new Error(`Remove the trailing colon at line: ${original_line}`)\n\t}\n\n\treturn { name, is_a_modifier }\n}\n\n// parses child nodes' lines of text into the corresponding child node JSON objects\nfunction parse_children(lines, parent_node_names)\n{\n\t// preprocess the lines (filter out comments, blank lines, etc)\n\tlines = filter_lines_for_parsing(lines)\n\n\t// return empty object if there are no lines to parse\n\tif (lines.length === 0)\n\t{\n\t\treturn {}\n\t}\n\n\t// parse each child node's lines\n\treturn split_lines_by_child_nodes(lines).map(function(lines)\n\t{\n\t\t// the first line is this child node's name (or names)\n\t\tconst declaration_line = lines.shift()\n\n\t\t// check for excessive indentation of the first child style class\n\t\tif (declaration_line.tabs !== 0)\n\t\t{\n\t\t\tthrow new Error(`Excessive indentation (${declaration_line.tabs} more \"tabs\" than needed) at line ${declaration_line.index}: \"${declaration_line.original_line}\"`)\n\t\t}\n\n\t\t// style class name declaration\n\t\tconst declaration = declaration_line.line\n\n\t\t// child nodes' names\n\t\tconst names = declaration.split(',').map(name => name.trim())\n\n\t\t// style class nesting validation\n\t\tvalidate_child_style_class_types(parent_node_names, names)\n\n\t\t// parse own CSS styles and recursively parse all child nodes\n\t\tconst style_json = parse_style_class(lines, names)\n\n\t\t// generate style json for this child node (or child nodes)\n\t\treturn names.map(function(node_declaration)\n\t\t{\n\t\t\t// parse this child node name\n\t\t\tconst { name, is_a_modifier } = parse_node_name(node_declaration)\n\n\t\t\t// clone the style JSON object for this child node\n\t\t\tconst json = extend({}, style_json)\n\n\t\t\t// set the modifier flag if it's the case\n\t\t\tif (is_a_modifier)\n\t\t\t{\n\t\t\t\tjson._is_a_modifier = true\n\t\t\t}\n\n\t\t\t// this child node's style JSON object\n\t\t\treturn { name, json }\n\t\t})\n\t})\n\t// convert an array of arrays to a flat array\n\t.reduce(function(array, child_array)\n\t{\n\t\treturn array.concat(child_array);\n\t}, \n\t[])\n\t// combine all the child nodes into a single JSON object\n\t.reduce(function(nodes, node)\n\t{\n\t\t// if style already exists for this child node, extend it\n\t\tif (nodes[node.name])\n\t\t{\n\t\t\textend(nodes[node.name], node.json)\n\t\t}\n\t\telse\n\t\t{\n\t\t\tnodes[node.name] = node.json\n\t\t}\n\t\t\n\t\treturn nodes\n\t}, \n\t{})\n}\n\n// filters out comments, blank lines, etc\nfunction filter_lines_for_parsing(lines)\n{\n\t// filter out blank lines\n\tlines = lines.filter(line => !is_blank(line.line))\n\n\tlines.forEach(function(line)\n\t{\n\t\t// remove single line comments\n\t\tline.line = line.line.replace(/^\\s*\\/\\/.*/, '')\n\t\t// remove any trailing whitespace\n\t\tline.line = line.line.trim()\n\t})\n\n\treturn lines\n}\n\n// takes the whole lines array and splits it by its top-tier child nodes\nfunction split_lines_by_child_nodes(lines)\n{\n\t// determine lines with indentation = 0 (child node entry lines)\n\tconst node_entry_lines = lines.map((line, index) => \n\t{\n\t\treturn { tabs: line.tabs, index }\n\t})\n\t.filter(line => line.tabs === 0)\n\t.map(line => line.index)\n\n\t// deduce corresponding child node ending lines\n\tconst node_ending_lines = node_entry_lines.map(line_index => line_index - 1)\n\tnode_ending_lines.shift()\n\tnode_ending_lines.push(lines.length - 1)\n\n\t// each child node boundaries in terms of starting line index and ending line index\n\tconst from_to = zip(node_entry_lines, node_ending_lines)\n\n\t// now lines are split by child nodes\n\treturn from_to.map(from_to => lines.slice(from_to[0], from_to[1] + 1))\n}\n\n// expand modifier style classes\nfunction expand_modifier_style_classes(node)\n{\n\tconst style = get_node_style(node)\n\tconst pseudo_classes_and_media_queries_and_keyframes = get_node_pseudo_classes_and_media_queries_and_keyframes(node)\n\n\tconst modifiers = Object.keys(node)\n\t\t// get all modifier style class nodes\n\t\t.filter(name => typeof(node[name]) === 'object' && node[name]._is_a_modifier)\n\t\n\t// for each modifier style class node\n\tmodifiers.forEach(function(name)\n\t{\n\t\t// // delete the modifier flags\n\t\t// delete node[name]._is_a_modifier\n\n\t\t// include parent node's styles and pseudo-classes into the modifier style class node\n\t\tnode[name] = extend({}, style, pseudo_classes_and_media_queries_and_keyframes, node[name])\n\n\t\t// expand descendant style class nodes of this modifier\n\t\texpand_modified_subtree(node, node[name])\n\t})\n\t\n\t// for each modifier style class node\n\tmodifiers.forEach(function(name)\n\t{\n\t\t// delete the modifier flags\n\t\tdelete node[name]._is_a_modifier\n\t})\n\n\t// recurse\n\tObject.keys(node)\n\t\t// get all style class nodes\n\t\t.filter(name => typeof(node[name]) === 'object')\n\t\t// for each style class node\n\t\t.forEach(function(name)\n\t\t{\n\t\t\t// recurse\n\t\t\texpand_modifier_style_classes(node[name])\n\t\t})\n\n\treturn node\n}\n\n// extracts root css styles of this style class node\nfunction get_node_style(node)\n{\n\treturn Object.keys(node)\n\t// get all CSS styles of this style class node\n\t.filter(property => typeof(node[property]) !== 'object')\n\t// for each CSS style of this style class node\n\t.reduce(function(style, style_property)\n\t{\n\t\tstyle[style_property] = node[style_property]\n\t\treturn style\n\t}, \n\t{})\n}\n\n// extracts root pseudo-classes and media queries of this style class node\nfunction get_node_pseudo_classes_and_media_queries_and_keyframes(node)\n{\n\treturn Object.keys(node)\n\t// get all child style classes this style class node, \n\t// which aren't modifiers and are a pseudoclass or a media query or keyframes\n\t.filter(property => typeof(node[property]) === 'object' \n\t\t&& (is_pseudo_class(property) || is_media_query(property) || is_keyframes(property))\n\t\t&& !node[property]._is_a_modifier)\n\t// for each child style class of this style class node\n\t.reduce(function(pseudo_classes_and_media_queries_and_keyframes, name)\n\t{\n\t\tpseudo_classes_and_media_queries_and_keyframes[name] = node[name]\n\t\treturn pseudo_classes_and_media_queries_and_keyframes\n\t}, \n\t{})\n}\n\n// for each (non-modifier) child style class of the modifier style class, \n// check if \"this child style class\" is also present \n// as a (non-modifier) \"child of the current style class\".\n// if it is, then extend \"this child style class\" with the style \n// from the \"child of the current style class\".\n// (and repeat recursively)\nfunction expand_modified_subtree(node, modified_node)\n{\n\t// from the modified style class node\n\tObject.keys(modified_node)\n\t// for all non-pseudo-classes and non-media-queries\n\t.filter(name => !is_pseudo_class(name) && !is_media_query(name) && !is_keyframes(name))\n\t// get all non-modifier style class nodes\n\t.filter(name => typeof(modified_node[name]) === 'object' && !modified_node[name]._is_a_modifier)\n\t// which are also present as non-modifier style classes\n\t// in the base style class node\n\t.filter(name => typeof(node[name]) === 'object' && !node[name]._is_a_modifier)\n\n\t// for each such style class node\n\t.forEach(function(name)\n\t{\n\t\t// style of the original style class node\n\t\tconst style = get_node_style(node[name])\n\n\t\t// pseudo-classes of the original style class node\n\t\tconst pseudo_classes_and_media_queries_and_keyframes = get_node_pseudo_classes_and_media_queries_and_keyframes(node[name])\n\n\t\t// mix in the styles\n\t\tmodified_node[name] = extend({}, style, pseudo_classes_and_media_queries_and_keyframes, modified_node[name])\n\n\t\t// recurse\n\t\treturn expand_modified_subtree(node[name], modified_node[name])\n\t})\n}\n\n// checks if this style class name designates a pseudo-class\nexport function is_pseudo_class(name)\n{\n\treturn starts_with(name, ':')\n}\n\n// checks if this style class name is a media query (i.e. @media (...))\nexport function is_media_query(name)\n{\n\treturn starts_with(name, '@media')\n}\n\nexport function is_keyframe_selector(name) \n{\n\treturn ends_with(name, '%') || (name === 'from') || (name === 'to');\n}\n\n\n// checks if this style class name is a media query (i.e. @media (...))\nexport function is_keyframes(name)\n{\n\treturn starts_with(name, '@keyframes')\n}\n\n// style class nesting validation\nfunction validate_child_style_class_types(parent_node_names, names)\n{\n\tfor (let parent of parent_node_names)\n\t{\n\t\t// if it's a pseudoclass, it can't contain any style classes\n\t\tif (is_pseudo_class(parent) && not_empty(names))\n\t\t{\n\t\t\tthrow new Error(`A style class declaration \"${names[0]}\" found inside a pseudoclass \"${parent}\". Pseudoclasses (:hover, etc) can't contain child style classes.`)\n\t\t}\n\n\t\t// if it's a media query style class, it must contain only pseudoclasses\n\t\tif (is_media_query(parent))\n\t\t{\n\t\t\tconst non_pseudoclass = names.filter(x => !is_pseudo_class(x))[0]\n\n\t\t\tif (non_pseudoclass)\n\t\t\t{\n\t\t\t\tthrow new Error(`A non-pseudoclass \"${non_pseudoclass}\" found inside a media query style class \"${parent}\". Media query style classes can only contain pseudoclasses (:hover, etc).`)\n\t\t\t}\n\t\t}\n\t\t\n\t\t// if it's a keyframes style class, it must contain only keyframe selectors\n\t\tif (is_keyframes(parent)) {\n\t\t\tconst non_keyframe_selector = names.filter(x => !is_keyframe_selector(x))[0]\n\n\t\t\tif (non_keyframe_selector) \n\t\t\t{\n\t\t\t\tthrow new Error(`A non-keyframe-selector \"${non_keyframe_selector}\" found inside a keyframes style class \"${parent}\". Keyframes style classes can only contain keyframe selectors (from, 100%, etc).`);\n\t\t\t}\n\t\t}\n\t}\n}\n\n// parse CSS style class\nfunction parse_style_class(lines, node_names)\n{\n\t// separate style lines from children lines\n\tconst { style_lines, children_lines } = split_into_style_lines_and_children_lines(lines)\n\n\t// convert style lines info to just text lines\n\tconst styles = style_lines.map(line => line.line)\n\n\t// using this child node's (or these child nodes') style lines \n\t// and this child node's (or these child nodes') child nodes' lines,\n\t// generate this child node's (or these child nodes') style JSON object\n\t// (this is gonna be a recursion)\n\treturn parse_node_json(styles, children_lines, node_names)\n}"]}